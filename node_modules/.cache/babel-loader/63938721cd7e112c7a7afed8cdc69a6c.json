{"ast":null,"code":"var _jsxFileName = \"/Users/tangdongliang/Desktop/my-app/src/TodoList.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass TodoList extends Component {\n  constructor(prop) {\n    super(prop);\n    this.change = this.change.bind(this);\n    this.enter = this.enter.bind(this);\n    this.state = {\n      inputV: \"Hello\",\n      test: []\n    };\n  }\n\n  change(e) {\n    this.setState({\n      inputV: e.target.value\n    });\n  }\n\n  enter(e) {\n    if (e.keyCode === 13) {\n      const test = [...this.state.test, this.state.inputV];\n      this.setState({\n        test,\n        inputV: \"\"\n      });\n    }\n  }\n\n  clk(index) {\n    const test = [...this.state.test];\n    test.splice(index, 1);\n    this.setState({\n      test\n    });\n  }\n\n  maplist() {\n    return this.state.test.map((value, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        onClick: this.clk.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, value);\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"test\",\n      value: this.state.inputV,\n      onChange: this.change,\n      onKeyUp: this.enter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.maplist()));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/tangdongliang/Desktop/my-app/src/TodoList.js"],"names":["React","Component","Fragment","TodoList","constructor","prop","change","bind","enter","state","inputV","test","e","setState","target","value","keyCode","clk","index","splice","maplist","map","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAG5BG,EAAAA,WAAW,CAACC,IAAD,EAAM;AACb,UAAMA,IAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AAEA,SAAKE,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,OADA;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AACDL,EAAAA,MAAM,CAACM,CAAD,EAAG;AACL,SAAKC,QAAL,CAAc;AACVH,MAAAA,MAAM,EAAEE,CAAC,CAACE,MAAF,CAASC;AADP,KAAd;AAIH;;AACDP,EAAAA,KAAK,CAACI,CAAD,EAAG;AACJ,QAAKA,CAAC,CAACI,OAAF,KAAc,EAAnB,EAAuB;AACnB,YAAML,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqB,KAAKF,KAAL,CAAWC,MAAhC,CAAb;AACA,WAAKG,QAAL,CAAc;AACVF,QAAAA,IADU;AAEVD,QAAAA,MAAM,EAAC;AAFG,OAAd;AAIH;AACJ;;AACDO,EAAAA,GAAG,CAACC,KAAD,EAAO;AACN,UAAMP,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AACAA,IAAAA,IAAI,CAACQ,MAAL,CAAYD,KAAZ,EAAkB,CAAlB;AACA,SAAKL,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd;AACH;;AAEDS,EAAAA,OAAO,GAAE;AACL,WAAO,KAAKX,KAAL,CAAWE,IAAX,CAAgBU,GAAhB,CAAoB,CAACN,KAAD,EAAQG,KAAR,KAAgB;AACvC,aAAO;AACH,QAAA,GAAG,EAAEA,KADF;AAEH,QAAA,OAAO,EAAE,KAAKD,GAAL,CAASV,IAAT,CAAc,IAAd,EAAmBW,KAAnB,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGLH,KAHK,CAAP;AAIH,KALM,CAAP;AAMH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,MAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKJ,MAHnB;AAII,MAAA,OAAO,EAAE,KAAKE,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKY,OAAL,EADL,CAPJ,CADJ;AAaH;;AAzD2B;;AA4DhC,eAAejB,QAAf","sourcesContent":["import React, { Component,Fragment} from 'react';\n\nclass TodoList extends Component{\n\n\n    constructor(prop){\n        super(prop);\n        this.change = this.change.bind(this);\n        this.enter = this.enter.bind(this);\n\n        this.state = {\n            inputV : \"Hello\",\n            test: []\n        };\n    }\n    change(e){\n        this.setState({\n            inputV: e.target.value\n            }\n        )\n    }\n    enter(e){\n        if ( e.keyCode === 13) {\n            const test = [...this.state.test, this.state.inputV]\n            this.setState({\n                test,\n                inputV:\"\"\n            })\n        }\n    }\n    clk(index){\n        const test = [...this.state.test];\n        test.splice(index,1);\n        this.setState({test});\n    }\n\n    maplist(){\n        return this.state.test.map((value, index)=>{\n            return <li\n                key={index}\n                onClick={this.clk.bind(this,index)}\n            >{value}</li>\n        })\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <input\n                    className='test'\n                    value={this.state.inputV}\n                    onChange={this.change}\n                    onKeyUp={this.enter}\n                />\n                <ul>\n                    {this.maplist()}\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}