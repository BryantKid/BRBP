{"ast":null,"code":"var _jsxFileName = \"/Users/tangdongliang/Desktop/my-app/src/TodoList.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass TodoList extends Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      inputV: \"Hello\",\n      test: []\n    };\n  }\n\n  change(e) {\n    this.setState({\n      inputV: e.target.value\n    });\n  }\n\n  enter(e) {\n    if (e.keyCode === 13) {\n      const test = [...this.state.test, this.state.inputV];\n      this.setState({\n        test,\n        inputV: \"\"\n      });\n    }\n  }\n\n  clk(index) {\n    const test = [...this.state.test];\n    test.splice(index, 1);\n    this.setState({\n      test\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.inputV,\n      onChange: this.change.bind(this),\n      onKeyUp: this.enter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.test.map((value, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        onClick: this.clk.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, value);\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/tangdongliang/Desktop/my-app/src/TodoList.js"],"names":["React","Component","Fragment","TodoList","constructor","prop","state","inputV","test","change","e","setState","target","value","enter","keyCode","clk","index","splice","render","bind","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAG5BG,EAAAA,WAAW,CAACC,IAAD,EAAM;AACb,UAAMA,IAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG,OADA;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AACDC,EAAAA,MAAM,CAACC,CAAD,EAAG;AACL,SAAKC,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAEG,CAAC,CAACE,MAAF,CAASC;AADP,KAAd;AAIH;;AACDC,EAAAA,KAAK,CAACJ,CAAD,EAAG;AACJ,QAAKA,CAAC,CAACK,OAAF,KAAc,EAAnB,EAAuB;AACnB,YAAMP,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqB,KAAKF,KAAL,CAAWC,MAAhC,CAAb;AACA,WAAKI,QAAL,CAAc;AACVH,QAAAA,IADU;AAEVD,QAAAA,MAAM,EAAC;AAFG,OAAd;AAIH;AACJ;;AACDS,EAAAA,GAAG,CAACC,KAAD,EAAO;AACN,UAAMT,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AACAA,IAAAA,IAAI,CAACU,MAAL,CAAYD,KAAZ,EAAkB,CAAlB;AACA,SAAKN,QAAL,CAAc;AAACH,MAAAA;AAAD,KAAd;AACH;;AAGDW,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,MADtB;AAEI,MAAA,QAAQ,EAAE,KAAKE,MAAL,CAAYW,IAAZ,CAAiB,IAAjB,CAFd;AAGI,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWM,IAAX,CAAgB,IAAhB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAWE,IAAX,CAAgBa,GAAhB,CAAoB,CAACR,KAAD,EAAQI,KAAR,KAAgB;AACjC,aAAO;AACH,QAAA,GAAG,EAAEA,KADF;AAEH,QAAA,OAAO,EAAE,KAAKD,GAAL,CAASI,IAAT,CAAc,IAAd,EAAmBH,KAAnB,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGLJ,KAHK,CAAP;AAIH,KALA,CADL,CANJ,CADJ;AAiBH;;AAlD2B;;AAqDhC,eAAeV,QAAf","sourcesContent":["import React, { Component,Fragment} from 'react';\n\nclass TodoList extends Component{\n\n\n    constructor(prop){\n        super(prop);\n        this.state = {\n            inputV : \"Hello\",\n            test: []\n        };\n    }\n    change(e){\n        this.setState({\n            inputV: e.target.value\n            }\n        )\n    }\n    enter(e){\n        if ( e.keyCode === 13) {\n            const test = [...this.state.test, this.state.inputV]\n            this.setState({\n                test,\n                inputV:\"\"\n            })\n        }\n    }\n    clk(index){\n        const test = [...this.state.test];\n        test.splice(index,1);\n        this.setState({test});\n    }\n\n\n    render(){\n        return(\n            <Fragment>\n                <input\n                    value={this.state.inputV}\n                    onChange={this.change.bind(this)}\n                    onKeyUp={this.enter.bind(this)}\n                />\n                <ul>\n                    {this.state.test.map((value, index)=>{\n                        return <li\n                            key={index}\n                            onClick={this.clk.bind(this,index)}\n                        >{value}</li>\n                    })}\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}